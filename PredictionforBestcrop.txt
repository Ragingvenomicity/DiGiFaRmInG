from statistics import mean
import numpy as np

xs = np.array([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28], dtype=np.float64)
ys = np.array([25,26,26.5,27,26.5,26.5,26.5,27,28,28.5,28,27.5,27,27.5,28,28,29,29,29,28.5,28,28,27.5,27.5,27.5,28,29,29.5], dtype=np.float64)


def best_fit_slope_and_intercept(xs,ys):
    m = (((mean(xs)*mean(ys)) - mean(xs*ys)) /
         ((mean(xs)*mean(xs)) - mean(xs*xs)))
    
    b = mean(ys) - m*mean(xs)
    
    return m, b

m, b = best_fit_slope_and_intercept(xs,ys)

print(m,b)
regression_line = [(m*x)+b for x in xs]
import matplotlib.pyplot as plt
from matplotlib import style
style.use('ggplot')
plt.scatter(xs,ys,color='#003F72')
plt.plot(xs, regression_line)
plt.show()
predict_x = 7
predict_y = (m*predict_x)+b
print(predict_y)